{"version":3,"sources":["logo.svg","modules/layout/component/NavBar.component.js","modules/app/component/News.component.js","modules/app/component/DailyUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","colored","to","flat","News","Design","children","title","style","marginBottom","fontWeight","fontSize","fontFamily","VirtualScreen","customStyle","defaultStyle","height","width","border","padding","position","margin","Object","assign","LabeledTextField","id","label","display","flexDirection","alignItems","paddingTop","paddingBottom","htmlFor","backgroundColor","Button","color","textAlign","cursor","Footer","marginLeft","bottom","justifyContent","DailyUI","size","validator","App","path","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c4e09fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {Button, Toolbar} from 'react-md';\nimport React from 'react';\nimport '../style/layout.scss';\nimport {Link} from 'react-router-dom';\n\nconst NavBar = () => <Toolbar className=\"app-toolbar\" colored>\n    <Link to=\"/\"><Button className=\"app-toolbar__page-button\" flat>Home</Button></Link>\n    <Link to=\"/dailyui\"><Button className=\"app-toolbar__page-button\" flat>DailyUI</Button></Link>\n    {/* <Link to=\"/news\"><Button className=\"app-toolbar__page-button\" flat>News</Button></Link> */}\n    {/* <Link to=\"/\"><Button className=\"app-toolbar__page-button\" flat>Gallery</Button></Link> */}\n    {/* <Link to=\"/\"><Button className=\"app-toolbar__page-button\" flat>About</Button></Link> */}\n</Toolbar>;\n\nexport default NavBar;","import React from 'react';\n\nconst News = () => {\n    return <>\n        News\n    </>;\n}\n\nexport default News;\n","import React from 'react';\nimport {Grid, Cell} from 'react-md';\n\nconst DailyUI = () => {\n    return <div\n        className=\"app-content\"\n        style={{width: '1200px', margin: 'auto'}}\n    >\n        <Grid style={{width: '100%'}}>\n            <Cell size={12}>\n                <div style={{display: 'flex'}}>\n                    <span style={{\n                        fontSize: '48px',\n                        fontWeight: 'bold',\n                        fontFamily: 'Oxanium',\n                    }}>001.</span>\n                </div>\n            </Cell>\n            <Cell size={4}>\n                <Design title=\"Basics\">\n                    <VirtualScreen>\n                        <div style={{marginBottom: '24px', width: '100%'}}>\n                            <span style={{fontWeight: 'bold', fontSize: '32px'}}>\n                                Sign Up\n                            </span>\n                        </div>\n                        <LabeledTextField id=\"firstName\" label=\"First Name\" />\n                        <LabeledTextField id=\"lastName\" label=\"Last Name\" />\n                        <LabeledTextField id=\"email\" label=\"Email\" validator={() => true} />\n                        <LabeledTextField id=\"phone\" label=\"Phone\" validator={() => true} />\n                        <Footer>\n                            <Button label=\"Cancel\" />\n                            <Button label=\"Submit\" />\n                        </Footer>\n                    </VirtualScreen>\n                </Design>\n            </Cell>\n            <Cell size={4}>\n                <Design title=\"Colored\">\n                    <VirtualScreen customStyle={{backgroundColor: '#1E2F43', color: 'white'}}>\n                        <div style={{marginBottom: '24px', width: '100%'}}>\n                            <span style={{fontWeight: 'bold', fontSize: '32px'}}>\n                                Sign Up\n                            </span>\n                        </div>\n                        <LabeledTextField colored id=\"firstName\" label=\"First Name\" />\n                        <LabeledTextField colored id=\"lastName\" label=\"Last Name\" />\n                        <LabeledTextField colored id=\"email\" label=\"Email\" validator={() => true} />\n                        <LabeledTextField colored id=\"phone\" label=\"Phone\" validator={() => true} />\n                        <Footer>\n                            <Button colored label=\"Cancel\" />\n                            <Button colored label=\"Submit\" />\n                        </Footer>\n                    </VirtualScreen>\n                </Design>\n            </Cell>\n        </Grid>\n    </div>;\n}\n\nconst Design = ({children, title}) => (\n    <>\n        <div style={{marginBottom: '24px'}}>\n            <span style={{fontWeight: 'bold', fontSize: '48px', fontFamily: 'Oxanium'}}>{title}</span>\n        </div>\n        {children}\n    </>\n)\n\nconst VirtualScreen = ({children, customStyle}) => {\n    const height = 1920;\n    const width = 1080;\n    const scale = 0.3;\n\n    const defaultStyle = {\n        height: `${height * scale}px`,\n        width: `${width * scale}px`,\n        border: '1px solid black',\n        padding: '4px',\n        position: 'relative',\n        margin: 'auto',\n    };\n\n    return <div style={Object.assign({}, defaultStyle, customStyle)}>\n        {children}\n    </div>;\n}\n\nconst LabeledTextField = ({colored, id, label}) => {\n    return <div\n        style={{\n            display: 'flex', flexDirection: 'column',\n            alignItems: 'flex-start', paddingTop: '4px',\n            paddingBottom: '4px',\n        }}\n    >\n        <label htmlFor={id}>{label}</label>\n        <input\n            id={id}\n            style={{\n                fontSize: '24px',\n                backgroundColor: colored ? '#FFE196' : 'white',\n            }} />\n    </div>\n}\n\nconst Button = ({colored, label}) => {\n    const color = label === 'Cancel' ? '#867877' : '#FFE196'\n\n    const style = {\n        backgroundColor: colored ? color : '#CCCCCC',\n        border: 'none',\n        color: label === 'Cancel' && colored ? 'white' : 'black',\n        padding: '18px 24px 18px 24px',\n        textAlign: 'center',\n        fontSize: '16px',\n        cursor: 'pointer',\n        fontWeight: 'bold',\n    };\n    return <button style={style}>{label}</button>;\n}\n\nconst Footer = ({children}) => (\n    <div\n        style={{\n            marginLeft: '-4px',\n            padding: '4px',\n            position: 'absolute',\n            bottom: '0',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between',\n        }}\n    >\n        {children}\n    </div>\n)\n\nexport default DailyUI;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport NavBar from './modules/layout/component/NavBar.component';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport News from './modules/app/component/News.component';\nimport DailyUI from './modules/app/component/DailyUI';\n\nfunction App() {\n    return <BrowserRouter>\n        <div className=\"App\">\n            <NavBar />\n            <Switch>\n                <Route path=\"/dailyui\">\n                    <DailyUI />\n                </Route>\n                <Route path=\"/news\">\n                    <News />\n                </Route>\n                <Route path=\"/\">\n                    <div className=\"app-content\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    </div>\n                </Route>\n            </Switch>\n        </div>\n    </BrowserRouter>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}